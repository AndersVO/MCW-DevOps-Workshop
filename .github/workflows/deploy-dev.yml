deploy-dev:
  runs-on: ubuntu-latest
  needs: build
  steps:
    - name: Download armtemplate
      uses: actions/download-artifact@v2
      with:
        name: armtemplate

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy ARM template
      run: |
        $output = az deployment group create --resource-group ${{ env.resourcegroup }} --template-file azuredeploy.json --parameters environment=dev --parameters administratorLogin=JallaJalla --parameters administratorLoginPassword=${{ secrets.DBPASSWORD }}
        $armOutputObj = $output | ConvertFrom-Json
        $webAppName = $armOutputObj.properties.outputs.webappname.value
        echo "::set-env name=webAppName::$webAppName"
      shell: pwsh

    - name: Deploy webapp to staging slot
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az webapp config container set \
                      --resource-group ${{ env.resourcegroup }} \
                      --name ${{ env.webAppName }} \
                      --docker-custom-image-name ${{ env.imagename }}:${{ github.sha }} \
                      --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }} \
                      --docker-registry-server-url https://${{ env.containerregistry }} \
                      --docker-registry-server-user ${{ env.registryusername }} \
                      --slot staging

    - name: Swap slots for webapp
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az webapp deployment slot swap -g ${{ env.resourcegroup }} -n ${{ env.webAppName }} --slot staging --target-slot production
